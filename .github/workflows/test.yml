name: Build project for all 

on: 
  workflow_dispatch

jobs:
  buildForAllSupportedPlatforms:
    name: Build for all supported platform
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: creator/Library
          key:
            Library-creator-StandaloneOSX-${{
            hashFiles('creator/**') }}
          restore-keys: |
            Library-creator-StandaloneOSX-
            Library-creator-
            Library-
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: creator
          targetPlatform: StandaloneOSX
          buildMethod: Earth9Builder.BuildScript.BuildPlay
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: creator
          targetPlatform: StandaloneOSX
          buildMethod: Earth9Builder.BuildScript.BuildCreator
          allowDirtyBuild: true
      
      
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-creator-StandaloneWindows64-${{
            hashFiles('creator/**') }}
          restore-keys: |
            Library-creator-StandaloneWindows64-
            Library-creator-
            Library-
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: creator
          targetPlatform: StandaloneWindows64
          buildMethod: Earth9Builder.BuildScript.BuildPlay
          allowDirtyBuild: true
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: creator
          targetPlatform: StandaloneWindows64
          buildMethod: Earth9Builder.BuildScript.BuildCreator
          allowDirtyBuild: true
      
#       - name: Upload public folder to Google Drive
#         uses: Jodebu/upload-to-drive@master
#         with:
#           target: creator/build
#           credentials: secrets.<GOOGLE_DRIVE_CREDENTIALS>
#           folder: <GOOGLE_DRIVE_FOLDER>

      - name: Make sh runnable
        run: | 
          chmod +x sign-bypass.sh 
          ditto -c -k --keepParent "sign-bypass.sh" "sign-bypass.zip"
        shell: sh
      - name: copy file
        uses: canastro/copy-file-action@master
        with:
          source: "sign-bypass.zip"
          target: "creator/build/"
          
      - uses: actions/upload-artifact@v2
        with:
          name: builds
          path: creator/build
