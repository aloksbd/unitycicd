name: Build Installer

on: 
  push:
    branches:
      - main

jobs:
  buildInstallerForWindows:
    name: Build for windows
    runs-on: windows-2019 #For docker error in windows-latest
    strategy:
      fail-fast: false
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Get current date for build generation
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Cache for windows
        uses: actions/cache@v2
        with:
          path: creator/Library
          key: Library-creator-StandaloneWindows64-${{
            hashFiles('creator/**') }}
          restore-keys: |
            Library-creator-StandaloneWindows64-
            Library-creator-
            Library-

      - name: Setup Preprocessor for build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: creator
          targetPlatform: StandaloneWindows64
          buildMethod: Earth9Builder.BuildScript.BuildCreator

      - name: Build Play for windows
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: creator
          targetPlatform: StandaloneWindows64
          buildMethod: Earth9Builder.BuildScript.BuildPlay
          allowDirtyBuild: true
          
      - name: Build Creator for windows
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: creator
          targetPlatform: StandaloneWindows64
          buildMethod: Earth9Builder.BuildScript.BuildCreator
          allowDirtyBuild: true

#       - name: Build Admin for windows
#         uses: game-ci/unity-builder@v2
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#         with:
#           projectPath: creator
#           targetPlatform: StandaloneWindows64
#           buildMethod: Earth9Builder.BuildScript.BuildAdmin
#           allowDirtyBuild: true

      - name: Building the installer
        run: | 
          "C:\Program Files (x86)\Inno Setup 6\iscc.exe" "earth9-installer.iss"
        shell: cmd
          
      - name: Upload the installer as an artifact
        uses: actions/upload-artifact@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          path: "Output"
          name: Setup-${{ steps.date.outputs.date }}
          
#       - name: Create zip of admin-build
#         uses: vimtor/action-zip@v1
#         with:
#           files: creator/build/windows/earth9-admin/
#           recursive: true
#           dest: admin-build-${{ steps.date.outputs.date }}.zip

#       - name: Upload admin-build.zip to Google Drive
#         uses: adityak74/google-drive-upload-git-action@main
#         with:
#           credentials: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
#           filename: admin-build-${{ steps.date.outputs.date }}.zip
#           overwrite: true
#           folderId: ${{ secrets.GOOGLE_DRIVE_FOLDER }}
